{"version":3,"sources":["app.js","ajax.js","realtime.js","graph.js"],"names":[],"mappingsvfile":"all.js","sourcesContent":["\n\n$(document).ready( function(){\n\n\n    init.push(function(){\n\n        $('.date').datepicker({\n            format:'dd/mm/yyyy',\n            todayBtn: 'linked'\n        });\n\n\n\n\n        $('.wyswyg').summernote({\n                height:200,\n                tabsize:2,\n                codemirror:{\n                    theme:'monokai'\n                }\n\n\n            });\n\n        $('#image').pixelFileInput(\n            { placeholder:'Aucun fichier selectionné...'}\n        );\n\n\n\n        $(\".js-example-tags\").select2();\n\n    });\n\n\n\n        var easyPieChartDefaults = {\n            animate: 2000,\n            scaleColor: false,\n            lineWidth: 6,\n            lineCap: 'square',\n            size: 90,\n            trackColor: '#e5e5e5'\n        }\n        $('#easy-pie-chart-1').easyPieChart($.extend({}, easyPieChartDefaults, {\n        }));\n        $('#easy-pie-chart-2').easyPieChart($.extend({}, easyPieChartDefaults, {\n        }));\n        $('#easy-pie-chart-3').easyPieChart($.extend({}, easyPieChartDefaults, {\n        }));\n\n\n\n\n    $('#dashboard .panel-body > div').slimScroll({ height: 300, alwaysVisible: true, color: '#888',allowPageScroll: true });\n\n\n    //init.push(function () {\n    //    $('.widget-tasks .panel-body').pixelTasks().sortable({\n    //        axis: \"y\",\n    //        handle: \".task-sort-icon\",\n    //        stop: function( event, ui ) {\n    //\n    //            ui.item.children( \".task-sort-icon\" ).triggerHandler( \"focusout\" );\n    //        }\n    //    });\n    //    $('#clear-completed-tasks').click(function () {\n    //        $('.widget-tasks .panel-body').pixelTasks('clearCompletedTasks');\n    //    });\n    //});\n    //\n    //init.push(function () {\n    //    Morris.Bar({\n    //        element: 'hero-bar',\n    //        data: [\n    //            { device: 'New-York', geekbench: 5 },\n    //            { device: 'Paris', geekbench: 8 },\n    //            { device: 'San Francisco', geekbench: 3 },\n    //            { device: 'Los Angeles', geekbench: 10 },\n    //            { device: 'Toronto', geekbench: 15 },\n    //            { device: 'Bagdad', geekbench: 9 }\n    //        ],\n    //        xkey: 'device',\n    //        ykeys: ['geekbench'],\n    //        labels: ['Villes'],\n    //        barRatio: 0.4,\n    //        xLabelAngle: 35,\n    //        hideHover: 'auto',\n    //        barColors: PixelAdmin.settings.consts.COLORS,\n    //        gridLineColor: '#cfcfcf',\n    //        resize: true\n    //    });\n    //});\n    //\n    //\n    //init.push(function () {\n    //    // Doughnut Chart Data\n    //    var doughnutChartData = [{\n    //        label: \"Enre 18 et 25\", data: 50\n    //    }, {\n    //        label: \"Entre 25 et 35\", data: 30\n    //    }, {\n    //        label: \"Entre 35 et 45\", data: 90\n    //    }, {\n    //        label: \"Entre 45 et 60\", data: 70\n    //    }, {\n    //        label: \"Plus de 60\", data: 80\n    //    }];\n    //    // Init Chart\n    //    $('#jq-flot-pie').pixelPlot(doughnutChartData, {\n    //        series: {\n    //            pie: {\n    //                show: true,\n    //                radius: 1,\n    //                innerRadius: 0.5,\n    //                label: {\n    //                    show: true,\n    //                    radius: 3 / 4,\n    //                    formatter: function (label, series) {\n    //                        return '<div style=\"font-size:14px;text-align:center;padding:2px;color:white;\">' + Math.round(series.percent) + '%</div>';\n    //                    },\n    //                    background: { opacity: 0 }\n    //                }\n    //            }\n    //        }\n    //    }, {\n    //        height: 205\n    //    });\n    //});\n    //\n    //\n    //init.push(function () {\n    //    Morris.Area({\n    //        element: 'hero-area',\n    //        data: [\n    //            { period: '2010 Q1', iphone: 2666, ipad: null, itouch: 2647 },\n    //            { period: '2010 Q2', iphone: 2778, ipad: 2294, itouch: 2441 },\n    //            { period: '2010 Q3', iphone: 4912, ipad: 1969, itouch: 2501 },\n    //            { period: '2010 Q4', iphone: 3767, ipad: 3597, itouch: 5689 },\n    //            { period: '2011 Q1', iphone: 6810, ipad: 1914, itouch: 2293 },\n    //            { period: '2011 Q2', iphone: 5670, ipad: 4293, itouch: 1881 },\n    //            { period: '2011 Q3', iphone: 4820, ipad: 3795, itouch: 1588 },\n    //            { period: '2011 Q4', iphone: 15073, ipad: 5967, itouch: 5175 },\n    //            { period: '2012 Q1', iphone: 10687, ipad: 4460, itouch: 2028 },\n    //            { period: '2012 Q2', iphone: 8432, ipad: 5713, itouch: 1791 }\n    //        ],\n    //        xkey: 'period',\n    //        ykeys: ['iphone', 'ipad', 'itouch'],\n    //        labels: ['iPhone', 'iPad', 'iPod Touch'],\n    //        hideHover: 'auto',\n    //        lineColors: PixelAdmin.settings.consts.COLORS,\n    //        fillOpacity: 0.3,\n    //        behaveLikeLine: true,\n    //        lineWidth: 2,\n    //        pointSize: 4,\n    //        gridLineColor: '#cfcfcf',\n    //        resize: true\n    //    });\n\n\n        $.getJSON($('#hero-area').data('url'),function(data){\n            var items=[];\n\n            $.each(data,function(key,val){\n                    items.push(val.firstname);\n            });\n\n            console.log(items);\n        });\n\n\n\n\n\n        $(\".chat-controls-input .form-control\").autosize();\n\n\n        $('.switcher').switcher({ theme: 'modern' });\n\n\n\n\n});","$(document).ready(function(){\n\n\n\n    $('table#list .btn-danger').click(function(e){\n\n        e.preventDefault(); //annule l'événement href de mes liens\n\n        console.log('vous avez cliquez dessus');\n\n        var elt = $(this);  // je recupere le liens sur lequel j'ai cliqué\n\n        //model ajax\n        $.ajax({\n\n            url: elt.attr('href') //url de mon du lien sur lequel j'ai cliqué\n\n        }).done(function(){\n\n            elt.parents('tr').fadeOut('slow')\n        })\n\n\n    });\n\n\n\n    // Ciblage de mon bon element\n    // greffe de mon evenement\n\n    $('#actionslist').change(function(e){\n\n        console.log('Coucou, tu veux mon projet');\n\n        var selection = $(this).val(); //recupere la valeur de l'option selectionn\"\n        console.log(selection);\n\n\n        //si je veux utiliser l'action 1 qui est de supprimer\n        if(selection==\"1\"){\n\n            // boucle jquery : pour chaque bouton coché\n            $('#list :checked').each(function(index){\n\n               // Envoyer une requete ajax de suppression pour chaque film coché\n\n                var elt = $(this);\n                $.ajax({\n\n                    url: elt.attr('data-url') //url de mon du lien sur lequel j'ai cliqué\n\n                }).done(function(){\n\n                    elt.parents('tr').fadeOut('slow')\n                })\n\n            });\n        }\n    });\n\n\n\n    $('table#list .btn-info').click(function(e){\n\n        e.preventDefault(); //annule l'événement href de mes liens\n\n        console.log('vous avez cliquez dessus');\n\n        var elt = $(this);  // je recupere le liens sur lequel j'ai cliqué\n\n        //model ajax\n        $.ajax({\n\n            url: elt.attr('href') //url de mon du lien sur lequel j'ai cliqué\n\n        }).done(function(){\n\n            elt.parents('tr').fadeOut('slow')\n        })\n\n\n    });\n\n\n\n    $('form#addMovie').submit(function(e){\n        e.preventDefault();\n        //console.log('Mon evenement!');\n\n        var elt = $(this);\n\n        //console.log(elt);\n       // console.log(elt.attr('action'));\n       // console.log(elt.serialize());\n\n\n        $.ajax({\n            url: elt.attr('action'),\n            method: \"POST\", // Methode d'envoi de ma requete\n            data: elt.serialize()\n            // data: envoyer des données\n        }).done(function() {\n            elt.parents('.panel').fadeOut('slow');\n            $.growl.warning({ title: \"Bravo!\", message: \"Film ajouté!\", duration: 5000 });\n\n        });\n        //console.log('coucou');\n\n    });\n\n\n    $('form#addTasks').submit(function(e){\n        e.preventDefault();\n\n        console.log('coucou');\n\n        var elt = $(this);\n        console.log(elt);\n\n        $.ajax({\n            url: elt.attr('action'),\n            method: \"POST\",\n            data: elt.serialize()\n\n        }).done(function() {\n            elt.parents('.task').fadeIn('slow');\n\n            $.growl.warning({ title: \"Bravo!\", message: \"Task ajouté!\", duration: 5000 });\n\n            document.getElementById(\"addTasks\").reset();\n\n\n\n\n\n        });\n\n\n\n    });\n\n    $('#dashajax').on(\"click\",\".checkbox\", function(e){\n\n        e.preventDefault(); //annule l'événement href de mes liens\n\n        console.log('vous avez cliquez dessus');\n\n        var elt = $(this);  // je recupere le liens sur lequel j'ai cliqué\n\n        //model ajax\n        $.ajax({\n\n            url: elt.attr('href') //url de mon du lien sur lequel j'ai cliqué\n\n        }).done(function(){\n\n            //elt.parents('div').fadeOut('slow')\n        })\n\n\n    });\n\n\n    $('.switcher').click(function(e){\n\n        var elt = $(this);\n\n\n\n            if($(this).is(':checked')){\n\n                $.ajax({\n\n                    url: elt.data('url'),\n                    method: \"POST\",\n                    data: {id:elt.data('id'), action:'add', _token: elt.data('token') }\n\n                }).done(function(){\n\n                    console.log(elt.data('id')+' en favoris')\n\n                });\n\n\n            }else{\n\n                $.ajax({\n\n                    url: elt.data('url'),\n                    method: \"POST\",\n                    data: {id:elt.data('id'), action:'remove',_token: elt.data('token')}\n\n                }).done(function(){\n\n                    console.log( elt.data('id')+'retiré des favoris')\n\n                });\n\n            }\n\n\n\n    });\n\n\n\n});","$(document).ready(function(){\n\n    setInterval(function () {\n        console.log('OK');\n\n        //appel ajax\n        $.ajax({\n            url: $('#panelajax').attr('data-url')\n\n        }).done(function(data){\n            $('#dashboard').html(data);\n        });\n\n\n        $.ajax({\n            url: $('#sessions').attr('data-url')\n\n        }).done(function(data){\n            $('#dashboardajax').html(data);\n        });\n\n        $.ajax({\n            url: $('#tasks').attr('data-url')\n\n        }).done(function(data){\n            $('#dashajax').html(data);\n        });\n\n\n\n\n\n    }, 3000);\n\n\n\n\n\n\n\n\n\n});","// ==============  GRAPH RÉPARTITION DES FILMS PAR CATEGORIES  GRAPH RÉPARTITION DES FILMS PAR CATEGORIES ============\\\\\n\n$(function () {\n\n    $.getJSON($('#container').data('tabe'),function(data){\n\n        $('#container').highcharts({\n            chart: {\n                type: 'pie',\n                options3d: {\n                    enabled: true,\n                    alpha: 45,\n                    beta: 0\n                }\n            },\n            title: {\n                text: 'Répartion des films par categories'\n            },\n            tooltip: {\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    depth: 35,\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.name}'\n                    }\n                }\n            },\n            series: [{\n                type: 'pie',\n                name: 'Browser share',\n                data: data\n            }]\n        });\n    });\n\n\n// =======================  GRAPH RÉPARTITION NB SEANCES/MOIS  GRAPH RÉPARTITION NB SEANCES/MOIS  ====================\\\\\n\n    $.getJSON($('#containe').data('tab'),function(data){\n\n        $('#containe').highcharts({\n            chart: {\n                type: 'column',\n                margin:100,\n                options3d: {\n                    enabled: true,\n                    alpha: 10,\n                    beta: 25,\n                    depth: 70\n                }\n            },\n            title: {\n                text: 'Répartition fu nombre de séances par mois'\n            },\n            subtitle: {\n                text: 'Nombre de séances sorties et diffusées par mois'\n            },\n            plotOptions: {\n                column: {\n                    depth: 25\n                }\n            },\n            xAxis: {\n                categories: Highcharts.getOptions().lang.shortMonths\n            },\n            yAxis: {\n                title: {\n                    text: null\n                }\n            },\n            series: [{\n                name: 'Sales',\n                data: data\n            }]\n        });\n\n  });\n\n\n\n// ==========  {{ GRAPH HISTORIQUE BUDGET/CATEGORIES/ANNEE }}{{ GRAPH HISTORIQUE BUDGET/CATEGORIES/ANNEE }}  =========\\\\\n\n    $('#contain').highcharts({\n        chart: {\n            type: 'bar'\n        },\n        title: {\n            text: 'Historique Budget par categories de films'\n        },\n        subtitle: {\n            text: ''\n        },\n        xAxis: {\n            categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\n            title: {\n                text: null\n            }\n        },\n        yAxis: {\n            min: 0,\n            title: {\n                text: 'Population (millions)',\n                align: 'high'\n            },\n            labels: {\n                overflow: 'justify'\n            }\n        },\n        tooltip: {\n            valueSuffix: ' millions'\n        },\n        plotOptions: {\n            bar: {\n                dataLabels: {\n                    enabled: true\n                }\n            }\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'top',\n            x: -40,\n            y: 80,\n            floating: true,\n            borderWidth: 1,\n            backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),\n            shadow: true\n        },\n        credits: {\n            enabled: false\n        },\n        series: [{\n            name: 'Year 1800',\n            data: [107, 31, 635, 203, 2]\n        }, {\n            name: 'Year 1900',\n            data: [133, 156, 947, 408, 6]\n        }, {\n            name: 'Year 2012',\n            data: [1052, 954, 4250, 740, 38]\n        }]\n    });\n\n\n\n\n});"],"sourceRoot":"/source/"}